{"version":3,"file":"static/js/708.77539ba5.chunk.js","mappings":"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","sources":["components/Link.tsx","components/SearchCountry.tsx","components/InformationCountry/InformationCountry.tsx","page/Home.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\r\nimport type { LinkProps } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface RouterLinkProps extends Omit<LinkProps, \"to\"> {\r\n  href: string;\r\n}\r\n\r\nexport const RouterLink = forwardRef((props: RouterLinkProps, ref: any) => {\r\n  const { href, ...other } = props;\r\n\r\n  return <Link ref={ref} to={href} {...other} />;\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Autocomplete, TextField } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAllCountries } from \"../Api\";\r\nimport { loadingImg } from \"./loadingImg\";\r\nimport { CountrySearch } from \"../helpers/type\";\r\n\r\nexport const SearchCountry = () => {\r\n  const [countries, setCountries] = useState<CountrySearch[]>([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const resultCountries = await getAllCountries();\r\n        setCountries(resultCountries);\r\n      } catch (error) {\r\n        return toast.error(`Opppss something went wrong.`);\r\n      }\r\n    };\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <section style={{ paddingTop: 20, paddingBottom: 20 }}>\r\n      <Autocomplete\r\n        sx={{ width: 300 }}\r\n        options={countries}\r\n        autoHighlight\r\n        onChange={(ev: any, newValue: CountrySearch | null) => {\r\n          if (newValue) {\r\n            navigate(newValue.name.official);\r\n          }\r\n        }}\r\n        getOptionLabel={(option) => option.name.official}\r\n        renderOption={(props, option) => (\r\n          <Box\r\n            component=\"li\"\r\n            sx={{ \"& > img\": { mr: 2, flexShrink: 0 } }}\r\n            {...props}\r\n          >\r\n            <img\r\n              loading=\"lazy\"\r\n              width=\"20\"\r\n              src={loadingImg({\r\n                imgPng: option.flags.png,\r\n                imgSvg: option.flags.svg,\r\n              })}\r\n              alt={option.name.official}\r\n            />\r\n            {option.name.official}\r\n          </Box>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id=\"outlined-textarea\"\r\n            label=\"Choose a country\"\r\n            inputProps={{\r\n              ...params.inputProps,\r\n              autoComplete: \"new-password\",\r\n            }}\r\n            name=\"country\"\r\n            multiline\r\n            className=\"custom-textfield\"\r\n            InputLabelProps={{\r\n              style: { color: \"white\", border: \"white\" },\r\n            }}\r\n            sx={{\r\n              \"& .MuiInputBase-input\": { color: \"#fff\" },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n","import { Grid, Box, Paper, Button, styled, Typography } from \"@mui/material\";\r\nimport { RouterLink } from \"../Link\";\r\nimport { loadingImg } from \"../loadingImg\";\r\nimport { FC } from \"react\";\r\nimport country from \"../../img/cuontry.png\";\r\nimport { Country } from \"../../helpers/type\";\r\nimport { SearchCountry } from \"../SearchCountry\";\r\n\r\ntype TCountry = {\r\n  countries: Country[];\r\n};\r\n\r\nconst Img = styled(\"img\")({\r\n  margin: \"auto\",\r\n  display: \"block\",\r\n  maxWidth: \"100%\",\r\n  maxHeight: \"100%\",\r\n});\r\n\r\nexport const InformationCountry: FC<TCountry> = (prop) => {\r\n  const { countries } = prop;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <SearchCountry />\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          height: 500,\r\n          backgroundImage: `url(${country})`,\r\n          backgroundSize: \"contain\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          \"&:hover\": {\r\n            transform: \"scale(1.03)translateZ(10px)\",\r\n          },\r\n        }}\r\n      />\r\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n        {countries?.map((country: Country) => (\r\n          <Grid item xs={3} key={country.name.official}>\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                margin: \"auto\",\r\n                maxWidth: 500,\r\n                flexGrow: 1,\r\n                backgroundColor: \"#1A2027\",\r\n              }}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item>\r\n                  <Button\r\n                    component={RouterLink}\r\n                    href={`/${country.name.official}`}\r\n                    sx={{ width: 128, height: 128 }}\r\n                  >\r\n                    <Img\r\n                      loading=\"lazy\"\r\n                      alt={country.flags.alt}\r\n                      src={loadingImg({\r\n                        imgPng: country.flags.png,\r\n                        imgSvg: country.flags.svg,\r\n                      })}\r\n                    />\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} sm container>\r\n                  <Grid item xs container direction=\"column\" spacing={2}>\r\n                    <Grid item xs>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"subtitle1\"\r\n                        component=\"h2\"\r\n                        style={{\r\n                          color: \"#fff\",\r\n                          fontSize: 18,\r\n                        }}\r\n                      >\r\n                        {country.name.official}\r\n                      </Typography>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"subtitle1\"\r\n                        component=\"p\"\r\n                        style={{\r\n                          color: \"#607D8B\",\r\n                          fontSize: 15,\r\n                        }}\r\n                      >\r\n                        {`Language: ${Object.values(country.languages).join(\r\n                          \", \"\r\n                        )}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Container } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getLimitCountries } from \"../Api\";\r\nimport { InformationCountry } from \"../components/InformationCountry/InformationCountry\";\r\nimport { Country } from \"../helpers/type\";\r\n\r\nconst HomePage = () => {\r\n  const [countries, setCountries] = useState<Country[]>([]);\r\n  console.log(\"countries: \", countries);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const resultCountries = await getLimitCountries();\r\n        setCountries(resultCountries);\r\n      } catch (error) {\r\n        return toast.error(`Opppss something went wrong.`);\r\n      }\r\n    };\r\n    fetchCountries();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <InformationCountry countries={countries} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["RouterLink","forwardRef","props","ref","href","other","_objectWithoutProperties","_excluded","_jsx","Link","_objectSpread","to","SearchCountry","_useState","useState","_useState2","_slicedToArray","countries","setCountries","navigate","useNavigate","useEffect","fetchCountries","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resultCountries","wrap","_context","prev","next","getAllCountries","sent","t0","abrupt","toast","error","stop","apply","arguments","style","paddingTop","paddingBottom","children","Autocomplete","sx","width","options","autoHighlight","onChange","ev","newValue","name","official","getOptionLabel","option","renderOption","_jsxs","Box","component","mr","flexShrink","loading","src","loadingImg","imgPng","flags","png","imgSvg","svg","alt","renderInput","params","TextField","id","label","inputProps","autoComplete","multiline","className","InputLabelProps","color","border","Img","styled","margin","display","maxWidth","maxHeight","InformationCountry","prop","height","backgroundImage","concat","country","backgroundSize","backgroundPosition","backgroundRepeat","transform","Grid","container","rowSpacing","columnSpacing","xs","sm","md","map","item","Paper","p","flexGrow","backgroundColor","spacing","Button","direction","Typography","gutterBottom","variant","fontSize","Object","values","languages","join","console","log","getLimitCountries","Container"],"sourceRoot":""}